// <auto-generated />
using System;
using EFCore.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore.API.Migrations
{
    [DbContext(typeof(AccommodationDBContext))]
    [Migration("20250314105740_AddSeedValuesForHotelsAndRooms")]
    partial class AddSeedValuesForHotelsAndRooms
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCore.API.Entities.EntityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EntityStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Entity is active and available",
                            EntityStatusId = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Entity is temporarily unavailable",
                            EntityStatusId = 1,
                            Name = "Inactive"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Entity has been deleted for everyone",
                            EntityStatusId = 1,
                            Name = "Deleted for everyone"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Entity is awaiting activation/verification",
                            EntityStatusId = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Entity has been archived",
                            EntityStatusId = 1,
                            Name = "Archived"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Entity has been suspended",
                            EntityStatusId = 1,
                            Name = "Suspended"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Entity has been delete for me",
                            EntityStatusId = 1,
                            Name = "Delete for me"
                        });
                });

            modelBuilder.Entity("EFCore.API.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Park Avenue",
                            City = "New York",
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@grandhyatt.com",
                            EntityStatusId = 1,
                            Name = "Grand Hyatt",
                            PhoneNumber = "+1-212-555-1234"
                        },
                        new
                        {
                            Id = 2,
                            Address = "50 Central Park South",
                            City = "New York",
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "info@ritzcarlton.com",
                            EntityStatusId = 1,
                            Name = "Ritz-Carlton",
                            PhoneNumber = "+1-212-555-2345"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Jumeirah Beach Road",
                            City = "Dubai",
                            Country = "United Arab Emirates",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@burjalarab.com",
                            EntityStatusId = 1,
                            Name = "Burj Al Arab",
                            PhoneNumber = "+971-4-555-6789"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Strand",
                            City = "London",
                            Country = "United Kingdom",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "info@savoy.com",
                            EntityStatusId = 1,
                            Name = "The Savoy",
                            PhoneNumber = "+44-20-7555-1234"
                        },
                        new
                        {
                            Id = 5,
                            Address = "25 Avenue Montaigne",
                            City = "Paris",
                            Country = "France",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@plaza-athenee.com",
                            EntityStatusId = 1,
                            Name = "Plaza Athénée",
                            PhoneNumber = "+33-1-5555-6789"
                        },
                        new
                        {
                            Id = 6,
                            Address = "5 Connaught Road",
                            City = "Hong Kong",
                            Country = "China",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "mohkg@mandarinoriental.com",
                            EntityStatusId = 1,
                            Name = "Mandarin Oriental",
                            PhoneNumber = "+852-2555-1234"
                        },
                        new
                        {
                            Id = 7,
                            Address = "1 Beach Road",
                            City = "Singapore",
                            Country = "Singapore",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "singapore@raffles.com",
                            EntityStatusId = 1,
                            Name = "Raffles Hotel",
                            PhoneNumber = "+65-6555-1234"
                        },
                        new
                        {
                            Id = 8,
                            Address = "301 Park Avenue",
                            City = "New York",
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@waldorfastoria.com",
                            EntityStatusId = 1,
                            Name = "Waldorf Astoria",
                            PhoneNumber = "+1-212-555-3456"
                        },
                        new
                        {
                            Id = 9,
                            Address = "57 E 57th Street",
                            City = "New York",
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations.nyc@fourseasons.com",
                            EntityStatusId = 1,
                            Name = "Four Seasons",
                            PhoneNumber = "+1-212-555-4567"
                        },
                        new
                        {
                            Id = 10,
                            Address = "2 Rue de la Paix",
                            City = "Paris",
                            Country = "France",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "paris.park@hyatt.com",
                            EntityStatusId = 1,
                            Name = "Park Hyatt",
                            PhoneNumber = "+33-1-5555-1234"
                        },
                        new
                        {
                            Id = 11,
                            Address = "10 Bayfront Avenue",
                            City = "Singapore",
                            Country = "Singapore",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@marinabaysands.com",
                            EntityStatusId = 1,
                            Name = "Marina Bay Sands",
                            PhoneNumber = "+65-6555-2345"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Salisbury Road",
                            City = "Hong Kong",
                            Country = "China",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "phk@peninsula.com",
                            EntityStatusId = 1,
                            Name = "The Peninsula",
                            PhoneNumber = "+852-2555-2345"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Brook Street",
                            City = "London",
                            Country = "United Kingdom",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@claridges.com",
                            EntityStatusId = 1,
                            Name = "Claridges",
                            PhoneNumber = "+44-20-7555-2345"
                        },
                        new
                        {
                            Id = 14,
                            Address = "3600 Las Vegas Blvd S",
                            City = "Las Vegas",
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@bellagio.com",
                            EntityStatusId = 1,
                            Name = "Bellagio",
                            PhoneNumber = "+1-702-555-1234"
                        },
                        new
                        {
                            Id = 15,
                            Address = "Paradise Island",
                            City = "Nassau",
                            Country = "Bahamas",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@atlantis.com",
                            EntityStatusId = 1,
                            Name = "Atlantis",
                            PhoneNumber = "+1-242-555-1234"
                        },
                        new
                        {
                            Id = 16,
                            Address = "3355 Las Vegas Blvd S",
                            City = "Las Vegas",
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@venetian.com",
                            EntityStatusId = 1,
                            Name = "The Venetian",
                            PhoneNumber = "+1-702-555-2345"
                        },
                        new
                        {
                            Id = 17,
                            Address = "1 Hamilton Place",
                            City = "London",
                            Country = "United Kingdom",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "london@intercontinental.com",
                            EntityStatusId = 1,
                            Name = "InterContinental",
                            PhoneNumber = "+44-20-7555-3456"
                        },
                        new
                        {
                            Id = 18,
                            Address = "6-6-2 Nishi-Shinjuku",
                            City = "Tokyo",
                            Country = "Japan",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "tokyo@hilton.com",
                            EntityStatusId = 1,
                            Name = "Hilton Tokyo",
                            PhoneNumber = "+81-3-5555-1234"
                        },
                        new
                        {
                            Id = 19,
                            Address = "3570 Las Vegas Blvd S",
                            City = "Las Vegas",
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "reservations@caesars.com",
                            EntityStatusId = 1,
                            Name = "Caesars Palace",
                            PhoneNumber = "+1-702-555-3456"
                        },
                        new
                        {
                            Id = 20,
                            Address = "19-21 Marina",
                            City = "Barcelona",
                            Country = "Spain",
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Email = "arts@ritzcarlton.com",
                            EntityStatusId = 1,
                            Name = "Hotel Arts",
                            PhoneNumber = "+34-93-555-1234"
                        });
                });

            modelBuilder.Entity("EFCore.API.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 1,
                            IsAvailable = true,
                            MaxOccupancy = 2,
                            PricePerNight = 299.99m,
                            RoomNumber = "101",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 1,
                            IsAvailable = true,
                            MaxOccupancy = 2,
                            PricePerNight = 299.99m,
                            RoomNumber = "102",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 1,
                            IsAvailable = true,
                            MaxOccupancy = 3,
                            PricePerNight = 459.99m,
                            RoomNumber = "201",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 2,
                            IsAvailable = true,
                            MaxOccupancy = 2,
                            PricePerNight = 699.99m,
                            RoomNumber = "A101",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 2,
                            IsAvailable = false,
                            MaxOccupancy = 4,
                            PricePerNight = 1299.99m,
                            RoomNumber = "A201",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 3,
                            IsAvailable = true,
                            MaxOccupancy = 4,
                            PricePerNight = 2999.99m,
                            RoomNumber = "Suite 1",
                            RoomTypeId = 5
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 3,
                            IsAvailable = true,
                            MaxOccupancy = 6,
                            PricePerNight = 3499.99m,
                            RoomNumber = "Suite 2",
                            RoomTypeId = 5
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 4,
                            IsAvailable = true,
                            MaxOccupancy = 2,
                            PricePerNight = 549.99m,
                            RoomNumber = "301",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 4,
                            IsAvailable = false,
                            MaxOccupancy = 2,
                            PricePerNight = 549.99m,
                            RoomNumber = "302",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 5,
                            IsAvailable = true,
                            MaxOccupancy = 3,
                            PricePerNight = 899.99m,
                            RoomNumber = "501",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 6,
                            IsAvailable = true,
                            MaxOccupancy = 2,
                            PricePerNight = 259.99m,
                            RoomNumber = "701",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 6,
                            IsAvailable = true,
                            MaxOccupancy = 4,
                            PricePerNight = 799.99m,
                            RoomNumber = "801",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 9,
                            IsAvailable = true,
                            MaxOccupancy = 4,
                            PricePerNight = 699.99m,
                            RoomNumber = "1201",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 9,
                            IsAvailable = false,
                            MaxOccupancy = 4,
                            PricePerNight = 699.99m,
                            RoomNumber = "1202",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 11,
                            IsAvailable = true,
                            MaxOccupancy = 3,
                            PricePerNight = 999.99m,
                            RoomNumber = "2501",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 12,
                            IsAvailable = true,
                            MaxOccupancy = 2,
                            PricePerNight = 449.99m,
                            RoomNumber = "601",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 14,
                            IsAvailable = true,
                            MaxOccupancy = 4,
                            PricePerNight = 599.99m,
                            RoomNumber = "1801",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 15,
                            IsAvailable = true,
                            MaxOccupancy = 6,
                            PricePerNight = 2499.99m,
                            RoomNumber = "Royal Suite",
                            RoomTypeId = 5
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 18,
                            IsAvailable = true,
                            MaxOccupancy = 2,
                            PricePerNight = 239.99m,
                            RoomNumber = "901",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            EntityStatusId = 1,
                            HotelId = 20,
                            IsAvailable = true,
                            MaxOccupancy = 3,
                            PricePerNight = 429.99m,
                            RoomNumber = "1501",
                            RoomTypeId = 2
                        });
                });

            modelBuilder.Entity("EFCore.API.Entities.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Standard room with basic amenities",
                            EntityStatusId = 1,
                            Name = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Deluxe room with enhanced amenities and comfort",
                            EntityStatusId = 1,
                            Name = "Deluxe"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Suite with separate living area and bedroom",
                            EntityStatusId = 1,
                            Name = "Suite"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Executive room with business amenities and services",
                            EntityStatusId = 1,
                            Name = "Executive"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Penthouse suite, typically on the top floor with premium amenities",
                            EntityStatusId = 1,
                            Name = "Penthouse"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Family room with additional space for families",
                            EntityStatusId = 1,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Accessible room designed for guests with disabilities",
                            EntityStatusId = 1,
                            Name = "Accessible"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Single room designed for one person",
                            EntityStatusId = 1,
                            Name = "Single"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Double room with a queen or king-sized bed",
                            EntityStatusId = 1,
                            Name = "Double"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Twin room with two separate beds",
                            EntityStatusId = 1,
                            Name = "Twin"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Presidential suite, the most luxurious accommodation",
                            EntityStatusId = 1,
                            Name = "Presidential"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 3, 14, 10, 57, 39, 900, DateTimeKind.Utc).AddTicks(9101),
                            Description = "Villa or cottage separate from the main hotel building",
                            EntityStatusId = 1,
                            Name = "Villa"
                        });
                });

            modelBuilder.Entity("EFCore.API.Entities.Room", b =>
                {
                    b.HasOne("EFCore.API.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore.API.Entities.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("EFCore.API.Entities.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("EFCore.API.Entities.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
